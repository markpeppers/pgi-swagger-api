---
swagger: "2.0"
info:
  description: This is the license API
  version: 1.0.0
  title: PGi License API
  contact:
    email: mark.peppers@pgi.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: virtserver.swaggerhub.com
basePath: /mpeppers/LicenseAPI/1.0.0
tags:
- name: License Mgmt - external
  description: Operations available to external applications (mavenir)
- name: License Mgmt - internal
  description: Internal api calls that may be used by an internal API (with knowledge of the data system)
schemes:
- https
paths:
  /contract:
    get:
      tags:
      - License Mgmt - external
      - License Mgmt - internal
      description: |
        Lists all contracts which are active and belong to the same enterprise as the current user, or all for super-users.
      operationId: listContracts
      parameters:
      - name: enterpriseid
        in: query
        description: Optional filter to only retrieve contracts assigned to a specific enterprise
        required: false
        type: string
      responses:
        200:
          description: List of contracts matching the enterprise, or empty list if none.
          schema:
            type: array
            items:
              $ref: '#/definitions/Contract'
        401:
          description: Not Authenticated
        403:
          description: Not authorized to view contracts for the requested enterprise
        500:
          description: Server error
    post:
      tags:
      - License Mgmt - internal
      summary: Create a new Contract
      description: Contract item to add.
      operationId: addContract
      parameters:
      - in: body
        name: newContract
        required: false
        schema:
          $ref: '#/definitions/Contract'
      responses:
        201:
          description: Contract Created
        400:
          description: Invalid input. Check error response for additional details
          schema:
            $ref: '#/definitions/RestError'
        409:
          description: Contract already exists for this externalId
        401:
          description: Not Authenticated
        403:
          description: Not authorized to view contracts for the requested enterprise
        500:
          description: Internal Server Error
  /contract/{contractId}:
    get:
      tags:
      - License Mgmt - internal
      - License Mgmt - external
      summary: Get a contract by id
      description: Get a contract by its UUID
      operationId: getContract
      parameters:
      - name: contractId
        in: path
        description: UUID of contract to be fetched
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: Contract found
          schema:
            $ref: '#/definitions/Contract'
        404:
          description: No contract with the given id was found for your enterprise
    put:
      tags:
      - License Mgmt - internal
      summary: Update a contract by id
      description: Update a Contract
      operationId: updateContract
      parameters:
      - name: contractId
        in: path
        description: UUID of contract to be fetched
        required: true
        type: string
        format: uuid
      - in: body
        name: updatedContract
        required: true
        schema:
          $ref: '#/definitions/Contract'
      responses:
        200:
          description: Contract successfully updated
          schema:
            $ref: '#/definitions/Contract'
        404:
          description: Not found
  /contract/{contractId}/default:
    post:
      tags:
      - License Mgmt - internal
      - License Mgmt - external
      summary: Set contract as the default
      description: Get a contract by its UUID
      operationId: getContractByUUID
      parameters:
      - name: contractId
        in: path
        description: UUID of contract to be fetched
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: Contract set as default. All others set to default = false
          schema:
            $ref: '#/definitions/Contract'
        404:
          description: No contract with the given id was found for your enterprise
  /contract/{id}/licenseset:
    get:
      tags:
      - License Mgmt - internal
      - License Mgmt - external
      summary: List all licenseSets for contract
      description: List all license-able components for a particular contract
      operationId: listLicenseSets
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        200:
          description: Success. If no results found, empty list
          schema:
            type: array
            items:
              $ref: '#/definitions/LicenseSet'
        404:
          description: Not found
    post:
      tags:
      - License Mgmt - internal
      summary: Create license set
      description: Adds a new licenseSet under the specified contract
      operationId: addLicenseSet
      parameters:
      - name: id
        in: path
        required: true
        type: string
      - in: body
        name: newLicense
        required: true
        schema:
          $ref: '#/definitions/LicenseSet'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/LicenseSet'
  /contract/{contractId}/licenseset/{licenseSetId}:
    get:
      tags:
      - License Mgmt - internal
      - License Mgmt - external
      summary: List all licenseSets for contract
      description: List all license-able components for a particular contract
      operationId: listLicenseSetsByContract
      parameters:
      - name: contractId
        in: path
        description: Id of the enterprise contract.
        required: true
        type: string
      - name: licenseSetId
        in: path
        description: Id of the License Set.
        required: true
        type: string
      responses:
        200:
          description: Success.
          schema:
            $ref: '#/definitions/LicenseSet'
        404:
          description: Not found
    patch:
      tags:
      - License Mgmt - internal
      summary: Update limited licenseSet details
      description: |
        Internal usage only to modify some attributes: may include
        updates to the model and model properties. (No access to options available...)
      parameters:
      - name: contractId
        in: path
        description: Id of the enterprise contract.
        required: true
        type: string
      - name: licenseSetId
        in: path
        description: Id of the License Set.
        required: true
        type: string
      - in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/TODO'
      responses:
        200:
          description: Success.
          schema:
            $ref: '#/definitions/LicenseSet'
        404:
          description: Not found
  /contract/{contractId}/licenseset/{licenseSetId}/default:
    post:
      tags:
      - License Mgmt - internal
      - License Mgmt - external
      summary: Set this License set as the default
      description: |
        Sets the default flag to true for this LicenseSet, and modifies all other
        licenseSets in this contract as default = false
      parameters:
      - name: contractId
        in: path
        description: Id of the enterprise contract.
        required: true
        type: string
      - name: licenseSetId
        in: path
        description: Id of the License Set.
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/LicenseSet'
  /contract/{contractId}/licenseset/{licenseSetId}/feature:
    post:
      tags:
      - License Mgmt - internal
      summary: Add a feature to a license set
      description: |
        Allows contracting to add additional features/addons/etc to the license
        Set. Id property is ignored.
      parameters:
      - name: contractId
        in: path
        description: Id of the enterprise contract.
        required: true
        type: string
      - name: licenseSetId
        in: path
        description: Id of the License Set.
        required: true
        type: string
      - in: body
        name: newFeature
        required: true
        schema:
          $ref: '#/definitions/Feature'
      responses:
        200:
          description: Success.
          schema:
            $ref: '#/definitions/Feature'
        404:
          description: Not found
definitions:
  Contract:
    type: object
    required:
    - default
    - enterpriseId
    - externalId
    - name
    - source
    properties:
      id:
        type: string
        format: uuid
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
        description: System generated UUID. You are not able to create or update this value via the API. It is ignored in all PUT/POST/PATCH methods
        readOnly: true
      name:
        type: string
        example: Hosted Voice with Global Meet
        maxLength: 256
      source:
        type: string
        description: Source system for contract creation/ownership
        enum:
        - iContract
      externalId:
        type: string
        format: uuid
        example: a023800000ZUQCW
        description: Unique identifier from source system, like the salesforce iContract id.
      enterpriseId:
        type: string
        description: Id of top level enterprise. User authorization must include access rights to the enterprise to access contracts.
      default:
        type: boolean
        description: |
          Flag to determine if this is the default contract to be used for operations. If you update this flag to
          be true, then all other contracts belonging to the enterprise will be set to default=false
    description: |
      Represents the base Contract (Agreement), which is assigned to an Enterprise (top level of company
      heirarchy)
    example:
      default: true
      name: Hosted Voice with Global Meet
      externalId: a023800000ZUQCW
      id: d290f1ee-6c54-4b01-90e6-d701748f0851
      source: iContract
      enterpriseId: enterpriseId
  LicenseSet:
    type: object
    required:
    - model
    - name
    properties:
      name:
        type: string
        example: Global Meet
        maxLength: 256
      id:
        type: string
        format: uuid
        description: System generated UUID
        readOnly: true
      externalId:
        type: string
        description: External System id. Sent in processing messages
      contractId:
        type: string
        description: Contract to which this sub component (license set) belongs. A single contract may contain multiple, independently licensable products.
        readOnly: true
      model:
        type: string
        description: 'License model that is applied to the component. Master Service
          Agreement, fixed license count, min/max license:'
        enum:
        - msa
        - fixed
        - minMax
      modelProperties:
        type: array
        description: 'Array of properties that associated to alicense model (i.e.:
          min, max). Values are dependent on license model used'
        items:
          $ref: '#/definitions/Property'
      features:
        type: array
        description: 'Optional list of features that can be selected during license
          assignment. '
        items:
          $ref: '#/definitions/Feature'
      default:
        type: boolean
        description: Flag to determine if this is the 'default' license set to be used in the UI. No effect on API calls
    example:
      id: 2352-sdf24-235d9-0heyTh3re
      name: Global Meet Web
      externalId: asdfalwirj2o3iruo8u9283u4wej
      contractId: 598e-2kjla4-I3thlkj4
      model: minMax
      modelProperties:
      - min: 30
        max: 50
      features:
      - featureName: participants
        description: Max web participants
        externalId: 123abc-sku
        name: 10 Users
      default: false
  Feature:
    type: object
    required:
    - description
    - name
    properties:
      id:
        type: string
        format: uuid
        description: System assigned name for this feature
      name:
        type: string
        example: Included Minutes
        description: Hooman-readable name for this feature
      description:
        type: string
        description: Hooman-readable description for this feature
      externalId:
        type: string
        example: 2S5srok3x635
        description: Reference ID for this option value. In most cases relates to a rated 'SKU' in a billing system
      option:
        type: string
        example: 1000 min
        description: Human-readable option name
    description: Defines a licence-able product's feature or add-on.
    example:
      name: Included Minutes
      description: description
      externalId: 2S5srok3x635
      id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      option: 1000 min
  Property:
    type: object
    required:
    - name
    - value
    properties:
      name:
        type: string
      value:
        type: string
  RestError:
    type: object
    properties:
      code:
        type: integer
        description: System error code (not HTTP status)
      message:
        type: string
        description: Error message
      extended:
        type: string
        description: extended error information (system related)
    description: |
      Error response details

      * 1xx - contract error message
      * 2xx - LicenseSet error messages
      * 3xx - License and client assignment errors
        * 310 - License is not active
        * 320 - A client with the given source type already assigned to this license
        * 35x - Option errors...
          * 350 - Invalid option group (does not exist in parent)
          * 351 - Invalid option value (does not exist as a value in parent licenseSet)
          * 352 - No option specified for group, and default does not exist
          * 353 - Multiple default options specified in OptionGroup.
          * 354 - No default option specified in OptionGroup
      * 5xx - general errors
        * 500 - Unexpected server error
        * 501 - Missing required values, see extended information
  TODO:
    type: object
    properties:
      thing:
        type: string
    description: all references to this need to be replaced
    example:
      thing: thing
