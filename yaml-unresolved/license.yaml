swagger: '2.0'
info:
  description: This is the PGi License API
  version: 1.0.0
  title: PGi License API
  # put the contact info for your development or API team
  contact:
    email: mark.peppers@pgi.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
  - name: License Mgmt - internal
    description: Operations available to external applications (mavenir)
  - name: License Mgmt - external
    description: Internal api calls that might be used by an internal API (with knowledge of data system)

paths:
  /license:
    get:
      tags:
        - License Mgmt - internal
        - License Mgmt - external
      summary: "search licenses"
      operationId: listLicense
      description: |
        Returns all licenses that are visible to the user. Can be filtered to show licenses
        assigned for a specific company (if user has access to multiple companies), by
        license set (GM5, Audio, etc), or by
        Result set includes pagination information
      parameters:
        - in: query
          name: limit
          description: Number of rows to return per page.
          type: integer
        - in: query
          name: page
          description: page number (1 based)
          type: integer
        - in: query
          name: sort
          description: sort attributes
          type: string
        - in: query
          name: dir
          description: "Sort direction; ascending or descending order. Default: ascending."
          type: string
          enum:
            - asc
            - desc
        - in: query
          name: companyid
          description: filter by companyId
          type: string
          format: uuid
        - in: query
          name: licensesetid
          description: filter by license set id
          type: string
          format: uuid
        - in: query
          name: activeonly
          description: should results include only active license assignments (defaults to true)
          type: boolean
          default: "true"
        - in: query
          name: contractid
          description: filter by contract id
          type: string
          format: uuid
        - in: query
          name: clientid
          description: filter by client id
          type: string
          format: uuid
      responses:
        '200':
          description: "Success"
          schema:
            $ref: '#/definitions/LicenseList'
    post:
      tags:
        - License Mgmt - internal
      summary: Create an unassigned license. Only intended for internal use
      description: |
        Creates a new license as part of the licenseSet, without assigning a Client to it. Tightly coupled to the data model, and we probably wouldn't want to expose this complexity to the customer.... INTERNAL USE ONLY
      parameters:
        - in: body
          name: newLicense
          schema:
            $ref: '#/definitions/License'
      responses:
        '200':
          description: "Success"
            schema:
              $ref: '#/definitions/License'
definitions:
  LicenseList:
    type: object
    description: paginated list of matching licenses.
    properties:
      pagination:
        $ref: '#/definitions/Pagination'
      results:
        type: array
        items:
          $ref: '#/definitions/License'
  License:
    type: object
    required:
      - licenseSetId
    properties:
      licenseId:
        type: string
        format: uuid
        description: "System generated UUID for the billable license "
      licenseSetId:
        type: string
        format: uuid
        description: "License set id"
      companyId:
        type: string
      startDate:
        type: string
        format: date
        description: "Date that this license assignment is in effect."
      endDate:
        type: string
        format: date
        description: "Date that this license assignment ends (delete)"
      features:
        type: array
        description: | 
          Optional array of license features, if applicable
        items:
          $ref: '#/definitions/Feature'
      canAdd:
        description: | 
          There are additional licenses that can be assigned in this set. (Based on license model and current data.) This will need to allow for different licensing models (min/max, msa, fixed) and take into account both number of assigned licenses and number of unassigned licenses as part of the calculation.
        type: boolean
      licenseAssignments:
        description: | 
          License Assignments represent the recent history of all client
          Ids that have been assigned to this license. These records
          are primary used by Mediation Clients to map received CDR data
          to the appropriate billable license
        type: array
        items:
          $ref: '#/definitions/Client'
  Feature:
    type: object
    description: "Defines a licence-able product's feature or add-on."
    required:
      - name
      - description
    properties:
      id:
        type: string
        format: uuid
        description: System assigned name for this feature
      name:
        type: string
        description: "Hooman-readable name for this feature"
        example: "Included Minutes"
      description:
        type: string
        description: "Hooman-readable description for this feature"
      externalId:
        type: string
        description: "Reference ID for this option value. In most cases relates to a rated 'SKU' in a billing system"
        example: "2S5srok3x635"
      option:
        type: string
        description: "Human-readable option name"
        example: "1000 min"
  Client:
    type: object
    required:
      - source
    properties:
      id:
        type: string
        format: uuid
        description: "System generated UUID"
      source:
        type: string
        description: | 
          Source system for identifying actual provisioned client. This value must be one of the supported
          systems in order to tie license information to specific, supported provisioning systems for purposes
          of license creation.
        enum:
          - gm5
          - mavenir
          - somethingElse
          - talkpoint
      externalId:
        type: string
        description: Unique identifier of client in source system. May not apply for unlinked/unprovisioned client sources..
      name:
        type: string
        description: Hooman readable name for use in identifying client records. (Admin use only?? Synchronizing? etc)
      startDate:
        type: string
        format: date
        description: Date that this client is assigned to the current license
      endDate:
        type: string
        format: date
        readOnly: true
        description: | 
          If the client assignment to the license is 'deleted', then the end date
          is set.
  Pagination:
    type: object
    properties:
      last:
        type: boolean
        description: is last page?
      totalElements:
        type: integer
        description: total rows that matched search criteria
      totalPages:
        type: integer
        description: total number of pages in search results
      limit:
        type: integer
        description: number or rows per page in original search criteria
      size:
        type: integer
        description: number of items in the current page
      page:
        type: integer
        description: current page number
      dir:
        type: string
        description: sort criteria in request
  TODO:
    type: object
    description: all references to this need to be replaced
    properties:
      thing:
        type: string
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /mpeppers/PGiLicenseAPI/1.0.0
schemes:
 - https