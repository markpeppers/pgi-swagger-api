---
swagger: "2.0"
info:
  description: This is the PGi Client API
  version: 1.0.0
  title: PGi Client API
  contact:
    email: mark.peppers@pgi.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: virtserver.swaggerhub.com
basePath: /mpeppers/PGiClientAPI/1.0.0
tags:
- name: internal
  description: Internal PGi admin calls
- name: external
  description: API calls available to external resources
schemes:
- https
paths:
  /provider/{id}:
    get:
      tags:
      - internal
      - external
      summary: Get a Provider by Id
      description: return the requested Provider
      operationId: getProvider
      parameters:
      - name: id
        in: path
        description: Provider Id
        required: true
        type: string
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Provider'
        404:
          description: provider not found
  /legalEntity/{id}:
    get:
      tags:
      - internal
      - external
      summary: Get a Legal Entity by Id
      description: return the requested Legal Entity
      operationId: getLegalEntity
      parameters:
      - name: id
        in: path
        description: Legal Entity Id
        required: true
        type: string
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/LegalEntity'
        404:
          description: legal entity not found
    delete:
      tags:
      - internal
      summary: deactivate a legal entity by Id
      operationId: deleteLegalEntity
      parameters:
      - name: id
        in: path
        description: Legal Entity Id
        required: true
        type: string
      responses:
        200:
          description: success
        202:
          description: legal entity already deactivated
        404:
          description: legal entity not found
  /legalEntity/reactivate/{id}:
    put:
      tags:
      - internal
      summary: reactivate an Legal Entity by Id
      operationId: reactivateLegalEntity
      parameters:
      - name: id
        in: path
        description: Legal Entity Id
        required: true
        type: string
      responses:
        200:
          description: success
        202:
          description: legal entity already active
        404:
          description: legal entity not found
  /legalEntity:
    post:
      tags:
      - internal
      - external
      summary: adds an Legal Entity
      operationId: addLegalEntity
      parameters:
      - in: body
        name: newLegalEntity
        description: legal entity to add
        required: false
        schema:
          $ref: '#/definitions/LegalEntity'
      responses:
        201:
          description: legal entity created
        400:
          description: invalid input, object invalid
    put:
      tags:
      - internal
      - external
      summary: modifies an Legal Entity
      operationId: modifyLegalEntity
      parameters:
      - in: body
        name: updatedLegalEntity
        description: updated legal entity
        required: false
        schema:
          $ref: '#/definitions/LegalEntity'
      responses:
        200:
          description: legal entity updated
          schema:
            $ref: '#/definitions/LegalEntity'
        404:
          description: legal entity not found
  /corpCust/{id}:
    get:
      tags:
      - internal
      - external
      summary: Get a Corporate Customer by Id
      description: return the requested Corporate Customer
      operationId: getCorpCust
      parameters:
      - name: id
        in: path
        description: Corporate Customer Id
        required: true
        type: string
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/CorpCust'
        404:
          description: corporate customer not found
    delete:
      tags:
      - internal
      summary: deactivate a corporate customer by Id
      operationId: deleteCorpCust
      parameters:
      - name: id
        in: path
        description: Corporate Customer Id
        required: true
        type: string
      responses:
        200:
          description: success
        202:
          description: corporate customer already deactivated
        404:
          description: corporate customer not found
  /corpCust/reactivate/{id}:
    put:
      tags:
      - internal
      summary: reactivate a Corporate Customer by Id
      operationId: reactivateCorpCust
      parameters:
      - name: id
        in: path
        description: Corporate Customer Id
        required: true
        type: string
      responses:
        200:
          description: success
        202:
          description: corporate customer already active
        404:
          description: corporate customer not found
  /corpCust:
    post:
      tags:
      - internal
      - external
      summary: adds a Corporate Customer
      operationId: addCorpCust
      parameters:
      - in: body
        name: newCorpCust
        description: corporate customer to add
        required: false
        schema:
          $ref: '#/definitions/CorpCust'
      responses:
        201:
          description: corporate customer created
        400:
          description: invalid input, object invalid
    put:
      tags:
      - internal
      - external
      summary: modifies a Corporate Customer
      operationId: modifyCorpCust
      parameters:
      - in: body
        name: updatedCorpCust
        description: updated corporate customer
        required: false
        schema:
          $ref: '#/definitions/CorpCust'
      responses:
        200:
          description: corporate customer updated
          schema:
            $ref: '#/definitions/CorpCust'
        404:
          description: corporate customer not found
  /company/{id}:
    get:
      tags:
      - internal
      - external
      summary: Get a Company by Id
      description: return the requested Company
      operationId: getCompany
      parameters:
      - name: id
        in: path
        description: Company Id
        required: true
        type: string
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Company'
        404:
          description: company not found
    delete:
      tags:
      - internal
      summary: deactivate a company by Id
      operationId: deleteCompany
      parameters:
      - name: id
        in: path
        description: Company Id
        required: true
        type: string
      responses:
        200:
          description: success
        202:
          description: company already deactivated
        404:
          description: company not found
  /company/reactivate/{id}:
    put:
      tags:
      - internal
      summary: reactivate a Company by Id
      operationId: reactivateCompany
      parameters:
      - name: id
        in: path
        description: Company Id
        required: true
        type: string
      responses:
        200:
          description: success
        202:
          description: company already active
        404:
          description: company not found
  /company:
    post:
      tags:
      - internal
      - external
      summary: adds a Company
      operationId: addCompany
      parameters:
      - in: body
        name: newCompany
        description: company to add
        required: false
        schema:
          $ref: '#/definitions/Company'
      responses:
        201:
          description: company created
        400:
          description: invalid input, object invalid
    put:
      tags:
      - internal
      - external
      summary: modifies a Company
      operationId: modifyCompany
      parameters:
      - in: body
        name: updatedCompany
        description: updated company
        required: false
        schema:
          $ref: '#/definitions/Company'
      responses:
        200:
          description: company updated
          schema:
            $ref: '#/definitions/Company'
        404:
          description: company not found
  /client/{id}:
    get:
      tags:
      - internal
      - external
      summary: Get a Client by Id
      description: return the requested Client
      operationId: getClient
      parameters:
      - name: id
        in: path
        description: Client Id
        required: true
        type: string
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Client'
        404:
          description: client not found
    delete:
      tags:
      - internal
      summary: deactivate a client by Id
      operationId: deleteClient
      parameters:
      - name: id
        in: path
        description: Client Id
        required: true
        type: string
      responses:
        200:
          description: success
        202:
          description: client already deactivated
        404:
          description: client not found
  /client/reactivate/{id}:
    put:
      tags:
      - internal
      summary: reactivate a Client by Id
      operationId: reactivateClient
      parameters:
      - name: id
        in: path
        description: Client Id
        required: true
        type: string
      responses:
        200:
          description: success
        202:
          description: client already active
        404:
          description: client not found
  /client:
    post:
      tags:
      - internal
      - external
      summary: adds a Client
      operationId: addClient
      parameters:
      - in: body
        name: newClient
        description: client to add
        required: false
        schema:
          $ref: '#/definitions/Client'
      responses:
        201:
          description: client created
        400:
          description: invalid input, object invalid
    put:
      tags:
      - internal
      - external
      summary: modifies a Client
      operationId: modifyClient
      parameters:
      - in: body
        name: updatedClient
        description: updated client
        required: false
        schema:
          $ref: '#/definitions/Client'
      responses:
        200:
          description: client updated
          schema:
            $ref: '#/definitions/Client'
        404:
          description: client not found
  /legalEntities/provider/{providerId}:
    get:
      tags:
      - internal
      summary: get list of all legal entities for a provider
      operationId: getLegalEntities
      parameters:
      - name: providerId
        in: path
        description: provider id
        required: true
        type: string
      responses:
        200:
          description: legal entities list
          schema:
            type: array
            items:
              $ref: '#/definitions/LegalEntity'
        400:
          description: bad request
        404:
          description: no legal entities found for given provider
  /corpCusts/legalEntity/{legalEntityId}:
    get:
      tags:
      - internal
      - external
      summary: get list of all corporate customers for a legal entity
      operationId: getCorpCusts
      parameters:
      - name: legalEntityId
        in: path
        description: legal entity id
        required: true
        type: string
      responses:
        200:
          description: corporate customer list
          schema:
            type: array
            items:
              $ref: '#/definitions/CorpCust'
        400:
          description: bad request
        404:
          description: no corporate customers found for given legal entity
  /companies/corpCust/{corpCustId}:
    get:
      tags:
      - internal
      - external
      summary: get list of all companies for a corporate customer
      operationId: getCompanies
      parameters:
      - name: corpCustId
        in: path
        description: corporate customer id
        required: true
        type: string
      responses:
        200:
          description: company list
          schema:
            type: array
            items:
              $ref: '#/definitions/Company'
        400:
          description: bad request
        404:
          description: no companies found for given corporate customer
  /clients/provider/{providerId}:
    get:
      tags:
      - internal
      summary: get list of clients by provider
      parameters:
      - name: providerId
        in: path
        description: provider id
        required: true
        type: string
      responses:
        200:
          description: client list
          schema:
            type: array
            items:
              $ref: '#/definitions/Client'
        400:
          description: bad request
        404:
          description: no matching clients found
  /clients/legalEntity/{legalEntityId}:
    get:
      tags:
      - internal
      - external
      summary: get list of clients by legal entity
      parameters:
      - name: legalEntityId
        in: path
        description: legal entity id
        required: true
        type: string
      responses:
        200:
          description: client list
          schema:
            type: array
            items:
              $ref: '#/definitions/Client'
        400:
          description: bad request
        404:
          description: no matching clients found
  /clients/corpCust/{corpCustId}:
    get:
      tags:
      - internal
      - external
      summary: get list of clients by corporate customer
      parameters:
      - name: corpCustId
        in: path
        description: corporate customer id
        required: true
        type: string
      responses:
        200:
          description: client list
          schema:
            type: array
            items:
              $ref: '#/definitions/Client'
        400:
          description: bad request
        404:
          description: no matching clients found
  /clients/company/{companyId}:
    get:
      tags:
      - internal
      - external
      summary: get list of clients by company
      parameters:
      - name: companyId
        in: path
        description: company id
        required: true
        type: string
      responses:
        200:
          description: client list
          schema:
            type: array
            items:
              $ref: '#/definitions/Client'
        400:
          description: bad request
        404:
          description: no matching clients found
definitions:
  Provider:
    type: object
    properties:
      id:
        type: string
        format: uuid
        description: System generated UUID
      source:
        type: string
        description: Source system
        enum:
        - gm5
        - mavinir
        - hub
      externalId:
        type: string
        description: Unique identifier of provider in source system.
      name:
        type: string
        description: Human readable name for use in identifying the provider.
      startDate:
        type: string
        format: date
        description: Date that this provider is created
      endDate:
        type: string
        format: date
        description: If the provider is 'deleted', then the end date is set.
        readOnly: true
    example:
      endDate: 2000-01-23
      name: name
      externalId: externalId
      id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      source: gm5
      startDate: 2000-01-23
  LegalEntity:
    type: object
    properties:
      id:
        type: string
        format: uuid
        description: System generated UUID
      source:
        type: string
        description: Source system
        enum:
        - gm5
        - mavinir
        - hub
      externalId:
        type: string
        description: Unique identifier of legal entity in source system.
      name:
        type: string
        description: Human readable name for use in identifying the legal entity.
      startDate:
        type: string
        format: date
        description: Date that this legal entity is created
      endDate:
        type: string
        format: date
        description: If the legal entity is 'deleted', then the end date is set.
        readOnly: true
    example:
      endDate: 2000-01-23
      name: name
      externalId: externalId
      id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      source: gm5
      startDate: 2000-01-23
  CorpCust:
    type: object
    properties:
      id:
        type: string
        format: uuid
        description: System generated UUID
      source:
        type: string
        description: Source system
        enum:
        - gm5
        - mavinir
        - hub
      externalId:
        type: string
        description: Unique identifier of the corporate customer in source system.
      legalEntityId:
        type: string
        description: The legal entity this corporate customer is under.
      name:
        type: string
        description: Human readable name for use in identifying the corporate customer.
      address:
        type: object
        example:
          address1: 2300 Lakeview Parkway
          city: Alpharetta
          stateOrProvince: GA
          postalCode: 30009
          country: USA
        properties: {}
      startDate:
        type: string
        format: date
        description: Date that this corporate customer is created
      endDate:
        type: string
        format: date
        description: If the corporate customer is 'deleted', then the end date is set.
        readOnly: true
    example:
      address:
        address1: 2300 Lakeview Parkway
        city: Alpharetta
        stateOrProvince: GA
        postalCode: 30009
        country: USA
      legalEntityId: legalEntityId
      endDate: 2000-01-23
      name: name
      externalId: externalId
      id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      source: gm5
      startDate: 2000-01-23
  Company:
    type: object
    properties:
      id:
        type: string
        format: uuid
        description: System generated UUID
      source:
        type: string
        description: Source system
        enum:
        - gm5
        - mavinir
        - hub
      externalId:
        type: string
        description: Unique identifier of the company in source system.
      corpcustId:
        type: string
        description: The corporate customer this company belongs to.
      name:
        type: string
        description: Human readable name for use in identifying the company.
      address:
        type: object
        example:
          address1: 2300 Lakeview Parkway
          city: Alpharetta
          stateOrProvince: GA
          postalCode: 30009
          country: USA
        properties: {}
      startDate:
        type: string
        format: date
        description: Date that this company is created
      endDate:
        type: string
        format: date
        description: If the company is 'deleted', then the end date is set.
        readOnly: true
    example:
      corpcustId: corpcustId
      address:
        address1: 2300 Lakeview Parkway
        city: Alpharetta
        stateOrProvince: GA
        postalCode: 30009
        country: USA
      endDate: 2000-01-23
      name: name
      externalId: externalId
      id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      source: gm5
      startDate: 2000-01-23
  Client:
    type: object
    required:
    - source
    properties:
      id:
        type: string
        format: uuid
        description: System generated UUID
      source:
        type: string
        description: |
          Source system for identifying actual provisioned client. This value must be one of the supported
          systems in order to tie license information to specific, supported provisioning systems for purposes
          of license creation.
        enum:
        - gm5
        - mavenir
        - hub
      externalId:
        type: string
        description: Unique identifier of client in source system. May not apply for unlinked/unprovisioned client sources..
      name:
        type: string
        example: Knight Industries
        description: Hooman readable name for use in identifying client records.
      companyId:
        type: string
        description: This client's company
      address:
        type: object
        example:
          address1: 2300 Lakeview Parkway
          city: Alpharetta
          stateOrProvince: GA
          postalCode: 30009
          country: USA
        properties: {}
      startDate:
        type: string
        format: date
        description: Date that this client is assigned to the current license
      endDate:
        type: string
        format: date
        description: |
          If the client assignment to the license is 'deleted', then the end date
          is set.
        readOnly: true
    example:
      companyId: companyId
      address:
        address1: 2300 Lakeview Parkway
        city: Alpharetta
        stateOrProvince: GA
        postalCode: 30009
        country: USA
      endDate: 2000-01-23
      name: Knight Industries
      externalId: externalId
      id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      source: gm5
      startDate: 2000-01-23
